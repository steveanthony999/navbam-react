{"version":3,"sources":["components/Home.js","components/Navbar.js","images/background.png","components/Builder.js","components/CodeText.js","components/Code.js","App.js","reportWebVitals.js","index.js"],"names":["Home","id","className","to","Navbar","navBg","linkColor","navbarPosition","navbarWidth","navbarHeight","navbarViewWidth","linkHoverState","hoverLinkColor","mobileNavDrawerBackground","mobileNavDrawerLinkColor","useState","navOpen","setNavOpen","isMobile","useMediaQuery","query","navStyle","width","background","position","left","transform","linkHover","e","target","classList","remove","add","style","color","linkHoverExit","innerNavStyle","padding","transition","linkStyle","navIconSpan","backgroundColor","mobileStyle","display","desktopStyle","mobileMenuStyle","mobileLinkStyle","onMouseEnter","onMouseLeave","onClick","document","getElementById","toggle","Builder","radio","setRadio","navBackground","colors","setColors","storedColors","setStoredColors","colorPicker","setColorPicker","colorPickerText","setColorPickerText","setNavbarPosition","setNavbarWidth","setNavbarHeight","storedNavbarHeight","setStoredNavbarHeight","setNavbarViewWidth","navbarShrink","setNavbarShrink","scrollY","setScrollY","setLinkHoverState","scrollText","setScrollText","useEffect","onScroll","window","pageYOffset","addEventListener","removeEventListener","handleRadio","x","BgImg","newTo","pathname","state","name","value","shape","variant","animation","bigger","onChange","defaultChecked","data-tip","data-for","data-delay-show","disabled","bottom","right","zIndex","top","hex","disableAlpha","CodeText","theCode","title","textSelectId","readOnly","icon","faCopy","size","select","execCommand","Code","props","location","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49984d51.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nconst Home = () => {\n  return (\n    <header id='home'>\n      <div id='home-container'>\n        <div className='text-center'>\n          <p>Welcome to</p>\n          <h1>\n            Nav<span>Bam</span>\n          </h1>\n        </div>\n        <Link to={'builder'} className='btn'>\n          Take me to the builder\n        </Link>\n      </div>\n    </header>\n  );\n};\n\nexport default Home;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive';\n\nconst Navbar = ({\n  navBg,\n  linkColor,\n  navbarPosition,\n  navbarWidth,\n  navbarHeight,\n  navbarViewWidth,\n  linkHoverState,\n  hoverLinkColor,\n  mobileNavDrawerBackground,\n  mobileNavDrawerLinkColor,\n}) => {\n  const [navOpen, setNavOpen] = useState(false);\n\n  const isMobile = useMediaQuery({\n    query: '(max-width: 414px)',\n  });\n\n  const navStyle = {\n    width: isMobile ? '100%' : navbarViewWidth,\n    background: navBg,\n    position: navbarPosition,\n    left: navbarPosition === 'fixed' ? '50%' : '0',\n    transform: navbarPosition === 'fixed' ? 'translateX(-50.05%)' : 'translateX(-0.025%)',\n  };\n\n  const linkHover = (e) => {\n    if (linkHoverState === 'none') {\n      e.target.classList.remove('toggled-hover-scale');\n      e.target.classList.remove('toggled-hover-color');\n    } else if (linkHoverState === 'scale') {\n      e.target.classList.add('toggled-hover-scale');\n      e.target.classList.remove('toggled-hover-color');\n    } else if (linkHoverState === 'color') {\n      e.target.classList.remove('toggled-hover-scale');\n      e.target.classList.add('toggled-hover-color');\n      e.target.style.color = hoverLinkColor;\n    } else if (linkHoverState === 'scaleandcolor') {\n      e.target.classList.add('toggled-hover-scale');\n      e.target.classList.add('toggled-hover-color');\n      e.target.style.color = hoverLinkColor;\n    }\n  };\n\n  const linkHoverExit = (e) => {\n    if (linkHoverState === 'color') {\n      e.target.style.color = linkColor;\n    } else if (linkHoverState === 'scaleandcolor') {\n      e.target.style.color = linkColor;\n    }\n  };\n\n  const toggleNavIcon = (e) => {\n    document.getElementById('nav-icon').classList.toggle('open');\n    if (navOpen === true) {\n      setNavOpen(false);\n    } else {\n      setNavOpen(true);\n    }\n  };\n\n  const innerNavStyle = {\n    width: navbarWidth,\n    padding: `${navbarHeight} 0`,\n    transition: '0.4s',\n  };\n\n  const linkStyle = {\n    color: linkColor,\n  };\n\n  const navIconSpan = {\n    backgroundColor: linkColor,\n  };\n\n  const mobileStyle = {\n    display: isMobile\n      ? navbarViewWidth === '480px'\n        ? 'none'\n        : 'block'\n      : navbarViewWidth === '480px'\n      ? 'block'\n      : 'none',\n  };\n\n  const desktopStyle = {\n    display: isMobile\n      ? navbarViewWidth === '480px'\n        ? 'block'\n        : 'none'\n      : navbarViewWidth === '480px'\n      ? 'none'\n      : 'block',\n  };\n\n  const mobileMenuStyle = {\n    transform: navOpen ? 'scaleY(1) translateX(-50%)' : 'scaleY(0) translateX(-50%)',\n    backgroundColor: mobileNavDrawerBackground,\n    position: navbarPosition === 'fixed' ? 'fixed' : 'absolute',\n  };\n\n  const mobileLinkStyle = {\n    color: mobileNavDrawerLinkColor,\n  };\n\n  return (\n    <>\n      <nav id='navbar' style={navStyle}>\n        <div id='nav-container' style={innerNavStyle}>\n          <div id='nav-logo'>\n            <Link to='/' style={linkStyle}>\n              Nav<span>Bam</span>\n            </Link>\n          </div>\n          <div id='nav-links' style={desktopStyle}>\n            <Link to='/about' style={linkStyle} onMouseEnter={linkHover} onMouseLeave={linkHoverExit}>\n              About\n            </Link>\n            <Link to='/blog' style={linkStyle} onMouseEnter={linkHover} onMouseLeave={linkHoverExit}>\n              Blog\n            </Link>\n            <Link to='/pricing' style={linkStyle} onMouseEnter={linkHover} onMouseLeave={linkHoverExit}>\n              Pricing\n            </Link>\n            <Link to='/contact' style={linkStyle} onMouseEnter={linkHover} onMouseLeave={linkHoverExit}>\n              Contact\n            </Link>\n            <Link to='/shop' style={linkStyle} onMouseEnter={linkHover} onMouseLeave={linkHoverExit}>\n              Shop\n            </Link>\n          </div>\n          {/* MOBILE */}\n          {/* NAV ICON */}\n          <div id='nav-links-mobile' style={mobileStyle}>\n            <div id='nav-icon' onClick={toggleNavIcon}>\n              <span className='nav-icon-span' style={navIconSpan}></span>\n              <span className='nav-icon-span' style={navIconSpan}></span>\n              <span className='nav-icon-span' style={navIconSpan}></span>\n              <span className='nav-icon-span' style={navIconSpan}></span>\n            </div>\n          </div>\n        </div>\n      </nav>\n      {/* MOBILE MENU */}\n      <div id='nav-mobile-menu' style={mobileMenuStyle}>\n        <div id='nav-mobile-links'>\n          <Link to='/about' style={mobileLinkStyle}>\n            About\n          </Link>\n          <Link to='/blog' style={mobileLinkStyle}>\n            Blog\n          </Link>\n          <Link to='/pricing' style={mobileLinkStyle}>\n            Pricing\n          </Link>\n          <Link to='/contact' style={mobileLinkStyle}>\n            Contact\n          </Link>\n          <Link to='/shop' style={mobileLinkStyle}>\n            Shop\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/background.5e0c5d7c.png\";","import { useState, useEffect } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport Navbar from './Navbar';\n// import CodeText from './CodeText';\nimport { ChromePicker } from 'react-color';\nimport { Radio } from 'pretty-checkbox-react';\nimport '@djthoms/pretty-checkbox';\nimport { Link } from 'react-router-dom';\nimport BgImg from '../images/background.png';\nimport { useMediaQuery } from 'react-responsive';\n\nconst Builder = () => {\n  const [radio, setRadio] = useState();\n\n  const [colors, setColors] = useState({\n    background: '#cccccc',\n    navBackground: '#333333',\n    linkColor: '#ffffff',\n    hoverLinkColor: '#3344ff',\n    mobileNavDrawerBackground: '#333333',\n    mobileNavDrawerLinkColor: '#ffffff',\n  });\n\n  const [storedColors, setStoredColors] = useState({\n    navBackground: '#333333',\n  });\n\n  const [colorPicker, setColorPicker] = useState(false);\n  const [colorPickerText, setColorPickerText] = useState('Choose an Element to Begin');\n  const [navbarPosition, setNavbarPosition] = useState('static');\n  const [navbarWidth, setNavbarWidth] = useState('100%');\n  const [navbarHeight, setNavbarHeight] = useState('0');\n  const [storedNavbarHeight, setStoredNavbarHeight] = useState('0');\n  const [navbarViewWidth, setNavbarViewWidth] = useState('100%');\n  const [navbarShrink, setNavbarShrink] = useState(false);\n  const [scrollY, setScrollY] = useState(0);\n  const [linkHoverState, setLinkHoverState] = useState('none');\n  const [scrollText, setScrollText] = useState('Scroll down to see how the navbar reacts');\n\n  useEffect(() => {\n    const onScroll = () => {\n      setScrollY(window.pageYOffset);\n      if (navbarShrink === true && navbarPosition === 'fixed') {\n        if (scrollY > 50) {\n          setNavbarHeight('0');\n        } else if (scrollY < 50) {\n          setNavbarHeight(storedNavbarHeight);\n        }\n      } else {\n        setNavbarHeight(storedNavbarHeight);\n      }\n      if (scrollY > 100) {\n        setScrollText(':)');\n      } else if (scrollY < 100) {\n        setScrollText('Scroll down to see how the navbar reacts');\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [scrollY, navbarPosition, navbarShrink, storedNavbarHeight]);\n\n  const handleColorChange = (color) => {\n    setStoredColors({ ...storedColors, navBackground: colors.navBackground });\n    if (radio === 'bgColor') {\n      setColors({ ...colors, background: color.hex });\n      //   document.getElementById('root').style.backgroundColor = colors.background;\n    } else if (radio === 'navBgColor') {\n      setColors({ ...colors, navBackground: color.hex });\n    } else if (radio === 'linkColor') {\n      setColors({ ...colors, linkColor: color.hex });\n    } else if (radio === 'linksHoverColor') {\n      setColors({ ...colors, hoverLinkColor: color.hex });\n    } else if (radio === 'linksHoverScaleAndColor') {\n      setColors({ ...colors, hoverLinkColor: color.hex });\n    } else if (radio === 'mobileNavDrawerBackgroundColor') {\n      setColors({ ...colors, mobileNavDrawerBackground: color.hex });\n    } else if (radio === 'mobileNavDrawerLinkColor') {\n      setColors({ ...colors, mobileNavDrawerLinkColor: color.hex });\n    }\n  };\n\n  const handleClick = (e) => {\n    if (e) {\n      setColorPicker(true);\n    } else {\n      setColorPickerText('Choose an Element');\n    }\n  };\n\n  const handleClose = () => {\n    setColorPicker(false);\n  };\n\n  const handleRadio = (x) => {\n    // setStoredColors({ ...storedColors, navBackground: colors.navBackground });\n    setRadio(x);\n    if (x === 'bgColor') {\n      setColorPickerText('Page Background Color');\n    } else if (x === 'linkColor') {\n      setColorPickerText('Link Color');\n    } else if (x === 'transparentNavBg') {\n      //   setStoredColors({ ...storedColors, navBackground: colors.navBackground });\n      setColors({ ...colors, navBackground: 'transparent' });\n      setColorPickerText('Choose an Element');\n    } else if (x === 'navBgColor') {\n      setColors({ ...colors, navBackground: storedColors.navBackground });\n      setColorPickerText('Navbar Background Color');\n    } else if (x === 'navbarPositionFixed') {\n      setNavbarPosition('fixed');\n    } else if (x === 'navbarPositionStatic') {\n      setNavbarPosition('static');\n    } else if (x === 'navbarWidthWide') {\n      setNavbarWidth('100%');\n    } else if (x === 'navbarWidthContained') {\n      setNavbarWidth('1100px');\n    } else if (x === 'navbarHeightShort') {\n      setNavbarHeight('0');\n      setStoredNavbarHeight('0');\n    } else if (x === 'navbarHeightMedium') {\n      setNavbarHeight('1rem');\n      setStoredNavbarHeight('1rem');\n    } else if (x === 'navbarHeightTall') {\n      setNavbarHeight('2rem');\n      setStoredNavbarHeight('2rem');\n    } else if (x === 'viewWidthDesktop') {\n      setNavbarViewWidth('100%');\n    } else if (x === 'viewWidthTablet') {\n      setNavbarViewWidth('768px');\n    } else if (x === 'viewWidthMobile') {\n      setNavbarViewWidth('480px');\n    } else if (x === 'navbarShrinkOff') {\n      setNavbarShrink(false);\n      setNavbarHeight(storedNavbarHeight);\n    } else if (x === 'navbarShrinkOn') {\n      setNavbarShrink(true);\n    } else if (x === 'linksHoverNone') {\n      setLinkHoverState('none');\n    } else if (x === 'linksHoverScale') {\n      setLinkHoverState('scale');\n    } else if (x === 'linksHoverColor') {\n      setLinkHoverState('color');\n      setColorPickerText('Links On Hover Color');\n    } else if (x === 'linksHoverScaleAndColor') {\n      setLinkHoverState('scaleandcolor');\n      setColorPickerText('Links On Hover Color');\n    } else if (x === 'mobileNavDrawerBackgroundColor') {\n      setColorPickerText('Mobile Nav Drawer Background Color');\n    } else if (x === 'mobileNavDrawerLinkColor') {\n      setColorPickerText('Mobile Nav Drawer Link Color');\n    }\n  };\n\n  const isMobile = useMediaQuery({\n    query: '(max-width: 414px)',\n  });\n\n  const style = {\n    background: `url(${BgImg}) no-repeat center center/cover`,\n    backgroundColor: colors.background,\n  };\n\n  const popover = {\n    position: 'absolute',\n    bottom: '0',\n    right: '0',\n    zIndex: '2',\n  };\n\n  const cover = {\n    position: 'fixed',\n    top: '0px',\n    right: '0px',\n    bottom: '0px',\n    left: '0px',\n  };\n\n  const newTo = {\n    pathname: '/code',\n    state: {\n      navBackground: colors.navBackground,\n      navbarPosition: navbarPosition,\n      navbarWidth: navbarWidth,\n      storedNavbarHeight: storedNavbarHeight,\n      linkColor: colors.linkColor,\n      linkHoverState: linkHoverState,\n      hoverLinkColor: colors.hoverLinkColor,\n      mobileNavDrawerBackground: colors.mobileNavDrawerBackground,\n      mobileNavDrawerLinkColor: colors.mobileNavDrawerLinkColor,\n      navbarShrink: navbarShrink,\n    },\n  };\n\n  return (\n    <>\n      <Navbar\n        navBg={colors.navBackground}\n        linkColor={colors.linkColor}\n        navbarPosition={navbarPosition}\n        navbarWidth={navbarWidth}\n        navbarHeight={navbarHeight}\n        navbarViewWidth={navbarViewWidth}\n        linkHoverState={linkHoverState}\n        hoverLinkColor={colors.hoverLinkColor}\n        mobileNavDrawerBackground={colors.mobileNavDrawerBackground}\n        mobileNavDrawerLinkColor={colors.mobileNavDrawerLinkColor}\n      />\n      <div style={style} id='builder'>\n        {/* <div id='builder'> */}\n        <div id='view-width'>\n          <Radio\n            name='viewWidth'\n            value='viewWidthDesktop'\n            shape='round'\n            variant='fill'\n            animation='jelly'\n            color='info'\n            bigger\n            onChange={() => handleRadio('viewWidthDesktop')}\n            defaultChecked={isMobile ? false : true}\n            data-tip\n            data-for='desktop'\n            data-delay-show={500}\n            disabled={isMobile ? true : false}\n          >\n            Desktop\n          </Radio>\n          <ReactTooltip id='desktop'>View navbar on desktop</ReactTooltip>\n          <Radio\n            name='viewWidth'\n            value='viewWidthTablet'\n            shape='round'\n            variant='fill'\n            animation='jelly'\n            color='info'\n            bigger\n            onChange={() => handleRadio('viewWidthTablet')}\n            data-tip\n            data-for='tablet'\n            data-delay-show={500}\n            disabled={isMobile ? true : false}\n          >\n            Tablet\n          </Radio>\n          <ReactTooltip id='tablet'>View navbar on tablet</ReactTooltip>\n          <Radio\n            name='viewWidth'\n            value='viewWidthMobile'\n            shape='round'\n            variant='fill'\n            animation='jelly'\n            color='info'\n            bigger\n            onChange={() => handleRadio('viewWidthMobile')}\n            defaultChecked={isMobile ? true : false}\n            data-tip\n            data-for='mobile'\n            data-delay-show={500}\n          >\n            Mobile\n          </Radio>\n          <ReactTooltip id='mobile'>View navbar on mobile</ReactTooltip>\n        </div>\n        <div id='attributes-window'>\n          {/* HEADER */}\n          {/* HEADER */}\n          {/* HEADER */}\n          <div id='attributes-header'>\n            <h2>Designer</h2>\n          </div>\n          {/* BODY */}\n          {/* BODY */}\n          {/* BODY */}\n          <div id='attributes-body'>\n            {/* ================= PAGE BACKGROUND COLOR */}\n            <div className='attributes-wrapper'>\n              <Radio\n                name='component'\n                value='bgColor'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('bgColor')}\n                data-tip\n                data-for='page-background'\n                data-delay-show={500}\n              >\n                Page Background Color\n              </Radio>\n              <ReactTooltip id='page-background'>Choose a color closest to the background of your site</ReactTooltip>\n              <p>{colors.background}</p>\n            </div>\n            {/* ================= NAVBAR BACKGROUND COLOR */}\n            <div className='title-box'>\n              <hr />\n              <h6>NAVBAR BACKGROUND COLOR</h6>\n              <hr />\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='component'\n                value='navBgColor'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('navBgColor')}\n                data-tip\n                data-for='navbar-background'\n                data-delay-show={500}\n              >\n                Navbar Background Color\n              </Radio>\n              <ReactTooltip id='navbar-background'>What color would you like your navbar to be?</ReactTooltip>\n              <p>{colors.navBackground}</p>\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='component'\n                value='transparentNavBg'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('transparentNavBg')}\n                data-tip\n                data-for='navbar-transparent'\n                data-delay-show={500}\n              >\n                Transparent Navbar\n              </Radio>\n              <ReactTooltip id='navbar-transparent'>If you don't want a colored navbar, choose tranparent</ReactTooltip>\n            </div>\n            {/* ================= LINKS COLOR */}\n            <div className='title-box'>\n              <hr />\n              <h6>LINKS COLOR</h6>\n              <hr />\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='component'\n                value='linkColor'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('linkColor')}\n                data-tip\n                data-for='link-color'\n                data-delay-show={500}\n              >\n                Links Color\n              </Radio>\n              <ReactTooltip id='link-color'>\n                Change the color of your links. P.S. You'll have to style your logo separately.\n              </ReactTooltip>\n              <p>{colors.linkColor}</p>\n            </div>\n            {/* ================= NAVBAR POSITION */}\n            <div className='title-box'>\n              <hr />\n              <h6>NAVBAR POSITION</h6>\n              <hr />\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='navbarPosition'\n                value='navbarPositionStatic'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('navbarPositionStatic')}\n                defaultChecked\n                data-tip\n                data-for='navbar-static'\n                data-delay-show={500}\n              >\n                Navbar Position - Static\n              </Radio>\n              <ReactTooltip id='navbar-static'>Your navbar will scroll with the page.</ReactTooltip>\n              <p>{navbarPosition}</p>\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='navbarPosition'\n                value='navbarPositionFixed'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('navbarPositionFixed')}\n                data-tip\n                data-for='navbar-fixed'\n                data-delay-show={500}\n              >\n                Navbar Position - Fixed\n              </Radio>\n              <ReactTooltip id='navbar-fixed'>Your navbar sticks right to the top of the page.</ReactTooltip>\n            </div>\n            {/* ================= INNER NAVBAR WIDTH */}\n            <div className='title-box'>\n              <hr />\n              <h6>INNER NAVBAR WIDTH</h6>\n              <hr />\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='navbarWidth'\n                value='navbarWidthWide'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('navbarWidthWide')}\n                defaultChecked\n                data-tip\n                data-for='navbar-wide'\n                data-delay-show={500}\n              >\n                Navbar Width - Wide\n              </Radio>\n              <ReactTooltip id='navbar-wide'>\n                Your logo and links will be pushed to the edge of the screen.\n              </ReactTooltip>\n              <p>{navbarWidth}</p>\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='navbarWidth'\n                value='navbarWidthContained'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('navbarWidthContained')}\n                data-tip\n                data-for='navbar-contained'\n                data-delay-show={500}\n              >\n                Navbar Width - Contained\n              </Radio>\n              <ReactTooltip id='navbar-contained'>\n                Your logo and links will be in a container that's 1100px max.\n              </ReactTooltip>\n            </div>\n            {/* ================= NAVBAR HEIGHT */}\n            <div className='title-box'>\n              <hr />\n              <h6>NAVBAR HEIGHT</h6>\n              <hr />\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='navbarHeight'\n                value='navbarHeightShort'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('navbarHeightShort')}\n                defaultChecked\n                data-tip\n                data-for='navbar-short'\n                data-delay-show={500}\n              >\n                Navbar Height - Short\n              </Radio>\n              <ReactTooltip id='navbar-short'>The height of your navbar will be 0.</ReactTooltip>\n              <p>{navbarHeight}</p>\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='navbarHeight'\n                value='navbarHeightMedium'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('navbarHeightMedium')}\n                data-tip\n                data-for='navbar-medium'\n                data-delay-show={500}\n              >\n                Navbar Height - Medium\n              </Radio>\n              <ReactTooltip id='navbar-medium'>\n                The height of your navbar will be 1rem above and below your links.\n              </ReactTooltip>\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='navbarHeight'\n                value='navbarHeightTall'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('navbarHeightTall')}\n                data-tip\n                data-for='navbar-tall'\n                data-delay-show={500}\n              >\n                Navbar Height - Tall\n              </Radio>\n              <ReactTooltip id='navbar-tall'>\n                The height of your navbar will be 2rem above and below your links.\n              </ReactTooltip>\n            </div>\n            {/* ================= NAVBAR SHRINK ON SCROLL */}\n            <div className='title-box'>\n              <hr />\n              <h6>NAVBAR SHRINK ON SCROLL</h6>\n              <hr />\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='navbarShrink'\n                value='navbarShrinkOff'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('navbarShrinkOff')}\n                defaultChecked\n                data-tip\n                data-for='navbar-shrink-off'\n                data-delay-show={500}\n              >\n                Navbar Shrink - Off\n              </Radio>\n              <ReactTooltip id='navbar-shrink-off'>\n                This will maintain the height of your navbar while scrolling.\n              </ReactTooltip>\n              <p>{navbarShrink ? 'On' : 'Off'}</p>\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='navbarShrink'\n                value='navbarShrinkOn'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('navbarShrinkOn')}\n                data-tip\n                data-for='navbar-shrink-on'\n                data-delay-show={500}\n              >\n                Navbar Shrink - On\n              </Radio>\n              <ReactTooltip id='navbar-shrink-on'>\n                This changes the height of your navbar to 0 (short) during scrolling. P.S. This only works if your\n                navbar position is set to Fixed and the height is set to at least Medium.\n              </ReactTooltip>\n            </div>\n            {/* ================= LINKS HOVER EFFECTS */}\n            <div className='title-box'>\n              <hr />\n              <h6>LINKS HOVER EFFECTS</h6>\n              <hr />\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='linksHover'\n                value='linksHoverNone'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('linksHoverNone')}\n                defaultChecked\n                data-tip\n                data-for='navbar-hover-none'\n                data-delay-show={500}\n              >\n                Links Hover - None\n              </Radio>\n              <ReactTooltip id='navbar-hover-none'>\n                Your links will have no effects when being hovered over.\n              </ReactTooltip>\n              <p>{linkHoverState}</p>\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='linksHover'\n                value='linksHoverScale'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('linksHoverScale')}\n                data-tip\n                data-for='navbar-hover-scale'\n                data-delay-show={500}\n              >\n                Links Hover - Scale\n              </Radio>\n              <ReactTooltip id='navbar-hover-scale'>\n                Your links will scale 1.2 times bigger than they are when hovered over.\n              </ReactTooltip>\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='linksHover'\n                value='linksHoverColor'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('linksHoverColor')}\n                data-tip\n                data-for='navbar-hover-color'\n                data-delay-show={500}\n              >\n                Links Hover - Color\n              </Radio>\n              <ReactTooltip id='navbar-hover-color'>Your links will change color when they hovered over.</ReactTooltip>\n              <p>{linkHoverState === 'color' || linkHoverState === 'scaleandcolor' ? colors.hoverLinkColor : ''}</p>\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='linksHover'\n                value='linksHoverScaleAndColor'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('linksHoverScaleAndColor')}\n                data-tip\n                data-for='navbar-hover-scale-and-color'\n                data-delay-show={500}\n              >\n                Links Hover - Scale and Color\n              </Radio>\n              <ReactTooltip id='navbar-hover-scale-and-color'>\n                Your links will both scale 1.2 times bigger and change color when they hovered over.\n              </ReactTooltip>\n            </div>\n            {/* ================= MOBILE NAV DRAWER */}\n            <div className='title-box'>\n              <hr />\n              <h6>MOBILE NAV DRAWER</h6>\n              <hr />\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='component'\n                value='mobileNavDrawerBackgroundColor'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('mobileNavDrawerBackgroundColor')}\n                data-tip\n                data-for='navbar-mobile-drawer-background'\n                data-delay-show={500}\n              >\n                Drawer Background Color\n              </Radio>\n              <ReactTooltip id='navbar-mobile-drawer-background'>\n                Change the color of the background of the drawer (links menu) for mobile displays.\n              </ReactTooltip>\n              <p>{colors.mobileNavDrawerBackground}</p>\n            </div>\n            <div className='attributes-wrapper'>\n              <Radio\n                name='component'\n                value='mobileNavDrawerLinkColor'\n                shape='round'\n                variant='fill'\n                animation='jelly'\n                color='info'\n                bigger\n                onChange={() => handleRadio('mobileNavDrawerLinkColor')}\n                data-tip\n                data-for='navbar-mobile-drawer-link-color'\n                data-delay-show={500}\n              >\n                Drawer Link Color\n              </Radio>\n              <ReactTooltip id='navbar-mobile-drawer-link-color'>\n                Change the color of the links in your mobile drawer.\n              </ReactTooltip>\n              <p>{colors.mobileNavDrawerLinkColor}</p>\n            </div>\n          </div>\n          {/* FOOTER */}\n          {/* FOOTER */}\n          {/* FOOTER */}\n          <div id='attributes-footer'>\n            {/* <div></div> */}\n            <button className='circle-btn' />\n            <div id='color-picker' onClick={() => handleClick(radio)}>\n              <h3>{colorPickerText}</h3>\n            </div>\n            {colorPicker ? (\n              <div style={popover}>\n                <div style={cover} onClick={handleClose} />\n                <ChromePicker\n                  color={\n                    radio === 'bgColor'\n                      ? colors.background\n                      : radio === 'navBgColor'\n                      ? colors.navBackground\n                      : radio === 'linkColor'\n                      ? colors.linkColor\n                      : radio === 'linksHoverColor'\n                      ? colors.hoverLinkColor\n                      : radio === 'linksHoverScaleAndColor'\n                      ? colors.hoverLinkColor\n                      : radio === 'mobileNavDrawerBackgroundColor'\n                      ? colors.mobileNavDrawerBackground\n                      : radio === 'mobileNavDrawerLinkColor' && colors.mobileNavDrawerLinkColor\n                  }\n                  onChange={handleColorChange}\n                  disableAlpha={true}\n                />\n              </div>\n            ) : null}\n          </div>\n        </div>\n\n        <Link to={newTo} className='code-btn'>\n          Generate Code\n        </Link>\n        <div className='scroll-text'>\n          <p>{scrollText}</p>\n        </div>\n        {/* TEXTAREA */}\n        {/* TEXTAREA */}\n        {/* TEXTAREA */}\n        {/* <CodeText\n          id={'html-code'}\n          title={'HTML'}\n          textSelectId={'html-select'}\n          theCode={`<nav>\n  <div id=\"nav-container\">\n    <div id=\"nav-logo\">\n      <!-- YOUR LOGO HERE -->\n    </div>\n    <div id=\"nav-links\">\n      <a href=\"#\"><!-- YOUR LINKS --></a>\n      <a href=\"#\"><!-- WILL GO HERE --></a>\n      <a href=\"#\"><!-- ADD OR REMOVE --></a>\n      <a href=\"#\"><!-- AS MANY AS --></a>\n      <a href=\"#\"><!-- YOU'D LIKE --></a>\n    </div>\n    <div id=\"nav-links-mobile\">\n      <div id=\"nav-icon\">\n        <span class='nav-icon-span'></span>\n        <span class='nav-icon-span'></span>\n        <span class='nav-icon-span'></span>\n        <span class='nav-icon-span'></span>\n      </div>\n    </div>\n  </div>\n  <div id=\"nav-mobile-menu\">\n    <div id=\"nav-mobile-links\">\n      <a href=\"#\"><!-- THE SAME LINKS --></a>\n      <a href=\"#\"><!-- FROM ABOVE --></a>\n      <a href=\"#\"><!-- WILL GO HERE --></a>\n      <a href=\"#\"><!-- AS WELL --></a>\n      <a href=\"#\"><!-- YOUR LINKS --></a>\n    </div>\n  </div>\n</nav>`}\n        /> */}\n\n        {/* <CodeText\n          id={'css-code'}\n          title={'CSS'}\n          textSelectId={'css-select'}\n          theCode={`nav { \n  background-color: ${colors.navBackground} \n  width: 100%;\n  position: ${navbarPosition};\n}\n\n#nav-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: ${navbarWidth}; \n  margin: 0 auto; \n  padding: ${storedNavbarHeight} 0;\n}\n\n#nav-links a {\n  text-decoration: none;\n  display: inline-block;\n  margin-left: 16px;\n  color: ${colors.linkColor};\n  transition: 0.2s;\n}\n\n${\n  linkHoverState === 'scale'\n    ? `#nav-links a:hover {\n  transform: scale(1.2);\n}`\n    : linkHoverState === 'color'\n    ? `#nav-links a:hover {\n  color: ${colors.hoverLinkColor};\n}`\n    : linkHoverState === 'scaleandcolor'\n    ? `#nav-links a:hover {\n  transform: scale(1.2);\n  color: ${colors.hoverLinkColor};\n}`\n    : ''\n}\n#nav-links-mobile {\n  display: none;\n}\n\n#nav-icon {\n  width: 30px;\n  height: 20px;\n  position: relative;\n  -webkit-transform: rotate(0deg);\n  -moz-transform: rotate(0deg);\n  -o-transform: rotate(0deg);\n  transform: rotate(0deg);\n  -webkit-transition: 0.5s ease-in-out;\n  -moz-transition: 0.5s ease-in-out;\n  -o-transition: 0.5s ease-in-out;\n  transition: 0.5s ease-in-out;\n  cursor: pointer;\n  z-index: 10;\n}\n\n#nav-icon span {\n  display: block;\n  position: absolute;\n  height: 2px;\n  width: 100%;\n  background: ${colors.linkColor};\n  opacity: 1;\n  left: 0;\n  -webkit-transform: rotate(0deg);\n  -moz-transform: rotate(0deg);\n  -o-transform: rotate(0deg);\n  transform: rotate(0deg);\n  -webkit-transition: 0.25s ease-in-out;\n  -moz-transition: 0.25s ease-in-out;\n  -o-transition: 0.25s ease-in-out;\n  transition: 0.25s ease-in-out;\n}\n\n#nav-icon span:nth-child(1) {\n  top: 0px;\n}\n\n#nav-icon span:nth-child(2),\n#nav-icon span:nth-child(3) {\n  top: 9px;\n}\n\n#nav-icon span:nth-child(4) {\n  top: 18px;\n}\n\n#nav-icon.open span:nth-child(1) {\n  top: 18px;\n  width: 0%;\n  left: 50%;\n}\n\n#nav-icon.open span:nth-child(2) {\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -o-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n\n#nav-icon.open span:nth-child(3) {\n  -webkit-transform: rotate(-45deg);\n  -moz-transform: rotate(-45deg);\n  -o-transform: rotate(-45deg);\n  transform: rotate(-45deg);\n}\n\n#nav-icon.open span:nth-child(4) {\n  top: 18px;\n  width: 0%;\n  left: 50%;\n}\n\n#nav-mobile-menu {\n  width: 100%;\n  height: 500px;\n  background: ${colors.mobileNavDrawerBackground};\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: top;\n  transform: scaleY(0);\n  transition: 0.2s;\n}\n\n#nav-mobile-links {\n  width: 100%;\n  height: 40%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n#nav-mobile-links a {\n  text-decoration: none;\n  color: ${colors.mobileNavDrawerLinkColor};\n}`}\n        /> */}\n        {/* <CodeText\n          id={'javascript-code'}\n          title={'JAVASCRIPT'}\n          textSelectId={'javascript-select'}\n          theCode={`\nconst navIcon = document.getElementById('nav-icon');\n\nnavIcon.addEventListener('click', () => {\n  navIcon.classList.toggle('open');\n});\n\nconst navMobileMenu = document.getElementById('nav-mobile-menu');\nconst body = document.querySelector('body');\n\nnavIcon.onclick = () => {\n  openCloseNav(navIcon.classList.value);\n};\n\nfunction openCloseNav(navOpen) {\n  if (navOpen === 'open') {\n    navMobileMenu.style.transform = 'scaleY(1)';\n    body.style.overflow = 'hidden';\n  } else {\n    navMobileMenu.style.transform = 'scaleY(0)';\n    body.style.overflow = 'scroll';\n  }\n}\n\n${\n  navbarShrink\n    ? `const nav = document.querySelector('nav');\n\nwindow.onscroll = () => scrollNav();\n\nfunction scrollNav() {\n  if (window.pageYOffset > 50) {\n    nav.style.padding = '0 32px';\n  } else {\n    nav.style.padding = '${storedNavbarHeight} 32px';\n  }\n}\n          `\n    : ''\n}`}\n        /> */}\n      </div>\n      <div id='section-2'>\n        <h6>Thank you for using NavBam!</h6>\n        <p>made with love by steve.vegas &copy; 2020</p>\n      </div>\n    </>\n  );\n};\n\nexport default Builder;\n","import { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\n\nconst CodeText = ({ theCode, id, title, textSelectId }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const style = {\n    left: isOpen ? '0' : '-300px',\n  };\n\n  const handleClick = (x) => {\n    // if (x === 'css-code') {\n    if (isOpen === false) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n    // }\n  };\n\n  const selectAllText = (e) => {\n    // if (e === 'css-select') {\n    const p = document.getElementById(e);\n    p.select();\n    document.execCommand('copy');\n    // } else {\n    //   console.log('p');\n    // }\n  };\n\n  return (\n    // <div className='code-box-container' id={id} style={style}>\n    <div className='code-box-container' id={id}>\n      {/* <div className='code-box-header' onClick={() => handleClick(id)}> */}\n      <div className='code-box-header'>\n        <h3>{title}</h3>\n      </div>\n      <div className='code-box-body'>\n        <textarea id={textSelectId} value={theCode} className='code-box' readOnly />\n      </div>\n      <div className='code-box-footer'>\n        <FontAwesomeIcon icon={faCopy} size='2x' onClick={() => selectAllText(textSelectId)} />\n      </div>\n    </div>\n  );\n};\n\nexport default CodeText;\n","import CodeText from './CodeText';\n\nconst Code = (props) => {\n  return (\n    <div id='code-container'>\n      <CodeText\n        id={'html-code'}\n        title={'HTML'}\n        textSelectId={'html-select'}\n        theCode={`<nav>\n  <div id=\"nav-container\">\n    <div id=\"nav-logo\">\n      <!-- YOUR LOGO HERE -->\n    </div>\n    <div id=\"nav-links\">\n      <a href=\"#\"><!-- YOUR LINKS --></a>\n      <a href=\"#\"><!-- WILL GO HERE --></a>\n      <a href=\"#\"><!-- ADD OR REMOVE --></a>\n      <a href=\"#\"><!-- AS MANY AS --></a>\n      <a href=\"#\"><!-- YOU'D LIKE --></a>\n    </div>\n    <div id=\"nav-links-mobile\">\n      <div id=\"nav-icon\">\n        <span class='nav-icon-span'></span>\n        <span class='nav-icon-span'></span>\n        <span class='nav-icon-span'></span>\n        <span class='nav-icon-span'></span>\n      </div>\n    </div>\n  </div>\n  <div id=\"nav-mobile-menu\">\n    <div id=\"nav-mobile-links\">\n      <a href=\"#\"><!-- THE SAME LINKS --></a>\n      <a href=\"#\"><!-- FROM ABOVE --></a>\n      <a href=\"#\"><!-- WILL GO HERE --></a>\n      <a href=\"#\"><!-- AS WELL --></a>\n      <a href=\"#\"><!-- YOUR LINKS --></a>\n    </div>\n  </div>\n</nav>`}\n      />\n\n      <CodeText\n        id={'css-code'}\n        title={'CSS'}\n        textSelectId={'css-select'}\n        theCode={`nav { \n  background-color: ${props.location.state.navBackground}; \n  width: 100%;\n  position: ${props.location.state.navbarPosition};\n  transition: 0.2s;\n}\n\n#nav-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: ${props.location.state.navbarWidth}; \n  margin: 0 auto; \n  padding: ${props.location.state.storedNavbarHeight} 0;\n}\n\n#nav-links a {\n  text-decoration: none;\n  display: inline-block;\n  margin-left: 16px;\n  color: ${props.location.state.linkColor};\n  transition: 0.2s;\n}\n\n${\n  props.location.state.linkHoverState === 'scale'\n    ? `#nav-links a:hover {\n  transform: scale(1.2);\n}`\n    : props.location.state.linkHoverState === 'color'\n    ? `#nav-links a:hover {\n  color: ${props.location.state.hoverLinkColor};\n}`\n    : props.location.state.linkHoverState === 'scaleandcolor'\n    ? `#nav-links a:hover {\n  transform: scale(1.2);\n  color: ${props.location.state.hoverLinkColor};\n}`\n    : ''\n}\n#nav-links-mobile {\n  display: none;\n}\n\n#nav-icon {\n  width: 30px;\n  height: 20px;\n  position: relative;\n  -webkit-transform: rotate(0deg);\n  -moz-transform: rotate(0deg);\n  -o-transform: rotate(0deg);\n  transform: rotate(0deg);\n  -webkit-transition: 0.5s ease-in-out;\n  -moz-transition: 0.5s ease-in-out;\n  -o-transition: 0.5s ease-in-out;\n  transition: 0.5s ease-in-out;\n  cursor: pointer;\n  z-index: 10;\n}\n\n#nav-icon span {\n  display: block;\n  position: absolute;\n  height: 2px;\n  width: 100%;\n  background: ${props.location.state.linkColor};\n  opacity: 1;\n  left: 0;\n  -webkit-transform: rotate(0deg);\n  -moz-transform: rotate(0deg);\n  -o-transform: rotate(0deg);\n  transform: rotate(0deg);\n  -webkit-transition: 0.25s ease-in-out;\n  -moz-transition: 0.25s ease-in-out;\n  -o-transition: 0.25s ease-in-out;\n  transition: 0.25s ease-in-out;\n}\n\n#nav-icon span:nth-child(1) {\n  top: 0px;\n}\n\n#nav-icon span:nth-child(2),\n#nav-icon span:nth-child(3) {\n  top: 9px;\n}\n\n#nav-icon span:nth-child(4) {\n  top: 18px;\n}\n\n#nav-icon.open span:nth-child(1) {\n  top: 18px;\n  width: 0%;\n  left: 50%;\n}\n\n#nav-icon.open span:nth-child(2) {\n  -webkit-transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -o-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n\n#nav-icon.open span:nth-child(3) {\n  -webkit-transform: rotate(-45deg);\n  -moz-transform: rotate(-45deg);\n  -o-transform: rotate(-45deg);\n  transform: rotate(-45deg);\n}\n\n#nav-icon.open span:nth-child(4) {\n  top: 18px;\n  width: 0%;\n  left: 50%;\n}\n\n#nav-mobile-menu {\n  width: 100%;\n  height: 500px;\n  background: ${props.location.state.mobileNavDrawerBackground};\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: top;\n  transform: scaleY(0);\n  transition: 0.2s;\n}\n\n#nav-mobile-links {\n  width: 100%;\n  height: 40%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n#nav-mobile-links a {\n  text-decoration: none;\n  color: ${props.location.state.mobileNavDrawerLinkColor};\n}\n\n/* media query mobile */\n@media screen and (max-width: 480px) {\n  #nav-links {\n    display: none;\n  }\n\n  #nav-links-mobile {\n    display: block;\n  }\n\n  #nav-container {\n    width: 100%;\n  }\n}`}\n      />\n\n      <CodeText\n        id={'javascript-code'}\n        title={'JAVASCRIPT'}\n        textSelectId={'javascript-select'}\n        theCode={`\nconst navIcon = document.getElementById('nav-icon');\n\nnavIcon.addEventListener('click', () => {\n  navIcon.classList.toggle('open');\n});\n\nconst navMobileMenu = document.getElementById('nav-mobile-menu');\nconst body = document.querySelector('body');\n\nnavIcon.onclick = () => {\n  openCloseNav(navIcon.classList.value);\n};\n\nfunction openCloseNav(navOpen) {\n  if (navOpen === 'open') {\n    navMobileMenu.style.transform = 'scaleY(1)';\n    body.style.overflow = 'hidden';\n  } else {\n    navMobileMenu.style.transform = 'scaleY(0)';\n    body.style.overflow = 'scroll';\n  }\n}\n\n${\n  props.location.state.navbarShrink\n    ? `const nav = document.querySelector('nav');\n\nwindow.onscroll = () => scrollNav();\n\nfunction scrollNav() {\n  if (window.pageYOffset > 50) {\n    nav.style.padding = '0 32px';\n  } else {\n    nav.style.padding = '${props.location.state.storedNavbarHeight} 32px';\n  }\n}\n          `\n    : ''\n}`}\n      />\n    </div>\n  );\n};\n\nexport default Code;\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Builder from './components/Builder';\nimport Code from './components/Code';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path='/' component={Home} exact />\n      <Route path='/builder' component={Builder} exact />\n      <Route path='/code' component={Code} exact />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}